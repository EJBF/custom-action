name: Deployment
run-name: ${{ github.actor }} is testing out GitHub Custom Actions

on:
  push:
    branches:
      - none
  workflow_dispatch:

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v4.2.2
      #   with:
      #     path: node_modules
      #     key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm ci

      - name: 'Load and cache dependencies'
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'

      - name: Output information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"

      - name: Lint code
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v4.2.2
      #   with:
      #     path: node_modules
      #     key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm ci

      - name: 'Load and cache dependencies'
        uses: ./.github/actions/cached-deps

      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v4.2.2
      #   with:
      #     path: node_modules
      #     key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm ci

      - name: 'Load and cache dependencies'
        uses: ./.github/actions/cached-deps

      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    # permissions:
      # id-token: write
      # contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      # - name: Get AWS permissions
        # uses: aws-actions/configure-aws-credentials@v4
        # with:
        #   role-to-assume: arn:aws:iam::528757803669:role/<role-name>
        #   aws-region: us-east-1
      - name: Deploy site
        id: deploy
      # run: echo "Deploying..."
      # uses: ./.github/actions/deploy-javascript
        uses: ./.github/actions/deploy-docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: gha-javascript-action
          bucket-region: us-east-1
          dist-folder: ./dist
      - name: Output information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"

  # information:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v4.2.2
  #     - name: Run custom action
  #       uses: ./.github/actions/deploy-javascript

